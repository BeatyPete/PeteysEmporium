{"version":3,"sources":["assets/images sync /^/.*/.png$","assets/images/bookfast-club.png","assets/images/moviehub.png","assets/images/pipForPi.png","assets/images/pokefinderTCG.png","components/Pokeball/index.js","components/PipSvg/index.js","components/ProjectList/index.js","components/ProjectDisplay/index.js","pages/Projects.js","App.js","reportWebVitals.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Pokeball","className","PipSvg","xmlns","viewBox","version","d","ProjectList","setLabel","goToProject","currentTarget","getAttribute","onClick","ProjectDisplay","projectDetails","description","href","siteLink","rel","target","src","require","title","default","alt","githubLink","Projects","useState","label","App","on","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.24de5eca.chunk.js","sourcesContent":["var map = {\n\t\"./bookfast-club.png\": 14,\n\t\"./moviehub.png\": 15,\n\t\"./pipForPi.png\": 16,\n\t\"./pokefinderTCG.png\": 17\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 13;","export default __webpack_public_path__ + \"static/media/bookfast-club.c7b30f31.png\";","export default __webpack_public_path__ + \"static/media/moviehub.837a4dcf.png\";","export default __webpack_public_path__ + \"static/media/pipForPi.729f6143.png\";","export default __webpack_public_path__ + \"static/media/pokefinderTCG.d73f058c.png\";","/* import './status.css' */\r\n\r\nfunction Pokeball() {\r\n\r\n    return (\r\n        <div className='poke-img'>\r\n                <div className=\"pokeball-container\">\r\n                  <div className=\"pokeball-top\">\r\n                    <div className=\"pokeball-button\"></div>\r\n                  </div>\r\n                  <h1>\r\n                  ü¶ù\r\n                  </h1>\r\n                  <div className=\"pokeball-bottom\"></div>\r\n                </div>\r\n        </div>\r\n)}\r\n\r\nexport default Pokeball;","/* import './status.css' */\r\n\r\nfunction PipSvg() {\r\n\r\n    return (\r\n        <svg id='vault-head' xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 128 168\" version=\"1.1\">\r\n            <g id=\"surface1\">\r\n                <path d=\"M 103.601562 96.109375 C 103.601562 95.097656 103.09375 94.019531 102.078125 92.863281 L 99.472656 90.703125 C 98.746094 90.34375 98.167969 90.523438 97.734375 91.242188 C 97.371094 91.964844 97.515625 92.539062 98.167969 92.972656 L 99.582031 94.269531 C 100.523438 95.207031 101.027344 96 101.101562 96.648438 C 101.171875 97.511719 101.644531 97.910156 102.515625 97.835938 C 103.308594 97.835938 103.671875 97.261719 103.601562 96.109375 M 99.253906 82.378906 C 98.601562 82.089844 98.09375 82.304688 97.734375 83.027344 C 97.300781 83.746094 97.550781 84.433594 98.492188 85.082031 L 102.730469 88 L 106.097656 91.785156 C 107.257812 93.226562 107.945312 93.585938 108.164062 92.863281 L 107.183594 89.835938 L 104.46875 86.164062 C 102.875 84.359375 101.136719 83.097656 99.253906 82.378906 M 45.367188 126.703125 L 36.242188 127.136719 C 32.476562 126.847656 29.613281 126.304688 27.660156 125.511719 L 14.730469 119.460938 C 13.789062 119.171875 13.171875 118.34375 12.882812 116.972656 C 12.667969 115.605469 13.464844 115.0625 15.273438 115.351562 L 22.445312 117.40625 C 28.019531 118.773438 32.585938 119.496094 36.132812 119.566406 C 41.855469 119.710938 49.421875 118.414062 58.839844 115.675781 C 61.15625 115.242188 62.894531 115.605469 64.054688 116.757812 C 64.921875 117.550781 65.066406 118.34375 64.488281 119.136719 C 64.054688 119.710938 63.402344 120.179688 62.535156 120.539062 C 54.132812 123.929688 48.410156 125.980469 45.367188 126.703125 M 25.050781 77.945312 C 25.339844 75.929688 25.195312 74.164062 24.617188 72.648438 C 24.039062 71.136719 23.203125 70.304688 22.117188 70.164062 C 21.03125 70.019531 20.019531 70.59375 19.078125 71.890625 C 18.136719 73.1875 17.519531 74.847656 17.230469 76.863281 C 16.941406 78.882812 17.085938 80.648438 17.664062 82.164062 C 18.242188 83.746094 19.078125 84.578125 20.164062 84.648438 C 21.25 84.792969 22.261719 84.214844 23.203125 82.917969 C 24.144531 81.621094 24.761719 79.964844 25.050781 77.945312 M 45.585938 72.863281 C 44.789062 72.578125 44.0625 73.117188 43.414062 74.488281 L 38.089844 82.59375 L 32.4375 88.972656 L 28.527344 92.972656 C 27.515625 93.980469 27.332031 95.136719 27.984375 96.433594 L 32.003906 104 C 32.800781 105.082031 33.886719 105.621094 35.265625 105.621094 L 37.109375 105.296875 L 38.304688 104.539062 L 38.199219 103.136719 L 34.722656 97.296875 C 33.996094 96 34.070312 94.8125 34.9375 93.730469 L 40.371094 85.621094 C 42.46875 82.378906 44.28125 78.882812 45.800781 75.136719 C 46.382812 73.910156 46.308594 73.152344 45.585938 72.863281 M 60.578125 106.378906 L 59.492188 106.164062 C 59.273438 106.304688 59.238281 106.628906 59.382812 107.136719 L 60.359375 110.703125 L 59.816406 112.433594 C 59.308594 112.9375 58.730469 113.261719 58.078125 113.40625 C 47.792969 116 40.226562 117.332031 35.371094 117.40625 C 32.332031 117.40625 28.128906 116.722656 22.769531 115.351562 L 15.601562 113.296875 L 14.296875 112.324219 C 13.933594 111.820312 13.789062 111.277344 13.863281 110.703125 L 14.078125 109.1875 L 13.863281 108.109375 C 13.644531 107.964844 13.316406 108.109375 12.882812 108.539062 L 8.429688 112.972656 C 7.488281 113.910156 7.269531 115.0625 7.777344 116.433594 L 11.6875 124 C 11.976562 124.578125 12.230469 124.828125 12.449219 124.757812 L 12.882812 123.785156 L 12.882812 122.703125 C 12.957031 122.125 13.210938 121.695312 13.644531 121.40625 L 15.164062 121.40625 L 21.574219 126.054688 C 26.71875 129.296875 31.496094 131.171875 35.914062 131.675781 C 40.335938 132.179688 46.417969 130.738281 54.167969 127.351562 C 58.007812 125.621094 61.410156 123.855469 64.378906 122.054688 L 66.117188 122.164062 L 67.421875 123.351562 L 66.988281 128.214844 L 67.855469 128.972656 L 68.617188 128.109375 L 71.660156 118.488281 C 72.019531 117.1875 71.660156 116.070312 70.574219 115.136719 L 60.578125 106.378906 M 70.355469 77.1875 C 69.777344 75.675781 68.941406 74.847656 67.855469 74.703125 C 66.769531 74.558594 65.71875 75.136719 64.707031 76.433594 C 63.765625 77.730469 63.148438 79.386719 62.859375 81.40625 C 62.570312 83.421875 62.714844 85.1875 63.292969 86.703125 C 63.875 88.289062 64.707031 89.117188 65.792969 89.1875 C 66.878906 89.332031 67.929688 88.757812 68.941406 87.460938 C 69.886719 86.164062 70.5 84.503906 70.789062 82.488281 C 71.078125 80.46875 70.933594 78.703125 70.355469 77.1875 M 72.855469 55.890625 L 71.332031 55.351562 C 70.828125 55.421875 70.390625 55.710938 70.03125 56.214844 L 68.292969 58.164062 C 67.132812 59.53125 66.660156 60.433594 66.878906 60.863281 C 66.953125 61.007812 67.601562 61.371094 68.835938 61.945312 L 72.746094 64.109375 L 77.089844 67.242188 C 78.683594 68.394531 79.699219 68.972656 80.132812 68.972656 C 80.785156 67.242188 79.769531 64.539062 77.089844 60.863281 L 72.855469 55.890625 M 30.484375 56.972656 L 30.375 54.8125 L 29.613281 53.296875 C 29.109375 53.007812 28.527344 53.007812 27.875 53.296875 L 19.078125 57.621094 L 18.207031 58.488281 C 18.207031 58.773438 18.570312 58.953125 19.292969 59.027344 L 27.984375 59.460938 C 28.78125 59.53125 29.398438 59.316406 29.832031 58.8125 C 30.339844 58.378906 30.554688 57.765625 30.484375 56.972656 M 7.34375 48 C 8.863281 49.511719 10.53125 50.558594 12.339844 51.136719 C 9.734375 55.027344 7.523438 58.917969 5.714844 62.8125 C 3.976562 59.710938 2.996094 57.226562 2.78125 55.351562 C 2.417969 52.394531 2.742188 50.089844 3.757812 48.433594 C 4.699219 46.703125 5.894531 46.558594 7.34375 48 M 90.128906 43.136719 L 99.6875 41.621094 C 103.746094 41.261719 106.496094 43.351562 107.945312 47.890625 C 109.539062 52.648438 107.222656 56.578125 100.992188 59.675781 C 100.703125 59.675781 100.378906 59.964844 100.015625 60.539062 C 99.507812 61.261719 99.726562 61.910156 100.667969 62.488281 C 105.085938 65.371094 108.417969 67.964844 110.660156 70.269531 C 116.023438 75.890625 118.554688 82.089844 118.265625 88.863281 C 115.949219 83.027344 113.269531 78.199219 110.226562 74.378906 C 106.171875 69.621094 103.382812 66.953125 101.863281 66.378906 C 100.921875 65.945312 100.230469 66.054688 99.796875 66.703125 C 99.363281 67.277344 99.507812 67.820312 100.230469 68.324219 L 102.949219 70.703125 L 108.273438 76.109375 C 111.457031 79.421875 114.535156 84.46875 117.507812 91.242188 L 116.746094 93.296875 C 114.5 88.035156 111.785156 83.710938 108.597656 80.324219 C 106.0625 77.441406 103.746094 75.605469 101.644531 74.8125 C 100.847656 74.449219 100.339844 74.738281 100.125 75.675781 C 99.980469 76.539062 100.449219 77.332031 101.535156 78.054688 L 106.75 82.269531 C 108.921875 84.648438 111.929688 89.046875 115.769531 95.460938 L 115.441406 96.324219 L 113.59375 96.757812 C 112.507812 97.261719 112.363281 98.125 113.160156 99.351562 C 118.375 103.675781 119.390625 108.792969 116.203125 114.703125 C 112.945312 120.613281 108.054688 123.027344 101.535156 121.945312 C 94.582031 133.1875 86.21875 141.695312 76.441406 147.460938 C 73.832031 148.902344 74.050781 149.585938 77.089844 149.511719 C 80.0625 149.371094 83.429688 148.144531 87.195312 145.835938 C 86.109375 152.46875 80.675781 157.835938 70.898438 161.945312 C 61.410156 165.980469 54.421875 166.34375 49.929688 163.027344 L 57.101562 162.054688 C 60.796875 161.1875 62.570312 160.433594 62.425781 159.785156 L 55.582031 160 C 49.421875 159.855469 42.542969 157.910156 34.9375 154.164062 C 32.621094 153.007812 30.195312 151.53125 27.660156 149.730469 C 23.601562 146.847656 19.910156 143.421875 16.578125 139.460938 C 9.988281 131.316406 5.570312 121.765625 3.324219 110.8125 C 1.148438 99.929688 1.367188 89.261719 3.976562 78.8125 C 6.148438 69.875 10.3125 60.757812 16.46875 51.460938 C 19.222656 51.171875 22.15625 49.875 25.269531 47.566406 L 30.917969 41.082031 C 34.394531 37.046875 36.710938 34.738281 37.871094 34.164062 C 39.246094 33.511719 41.167969 33.730469 43.628906 34.8125 L 47.324219 36.757812 C 49.421875 37.765625 51.667969 38.054688 54.058594 37.621094 C 55.796875 37.332031 58.042969 36.503906 60.796875 35.136719 L 70.03125 34.8125 C 73.578125 36.035156 76.730469 38.378906 79.480469 41.835938 C 81.582031 44.503906 85.132812 44.9375 90.128906 43.136719 M 93.0625 11.136719 C 97.335938 11.855469 101.101562 14.59375 104.359375 19.351562 L 110.445312 27.460938 C 113.195312 28.757812 116.023438 31.675781 118.917969 36.214844 C 121.019531 39.53125 122.757812 42.992188 124.132812 46.59375 C 126.667969 53.007812 126.851562 61.332031 124.675781 71.566406 C 123.519531 76.613281 122.140625 81.046875 120.546875 84.863281 C 119.460938 78.59375 116.890625 73.296875 112.835938 68.972656 L 104.578125 61.730469 C 106.96875 60.144531 109.03125 58.378906 110.769531 56.433594 C 113.160156 53.765625 114.246094 51.421875 114.03125 49.40625 C 113.667969 46.164062 112.582031 43.496094 110.769531 41.40625 C 108.308594 38.378906 104.722656 37.082031 100.015625 37.511719 L 91.867188 40.109375 C 88.390625 41.40625 86.109375 41.910156 85.023438 41.621094 L 77.199219 32.972656 C 72.78125 28 69.195312 26.054688 66.445312 27.136719 L 58.949219 31.242188 L 53.515625 34.164062 L 49.605469 34.488281 L 46.671875 32.863281 L 42 30.703125 C 40.40625 30.34375 38.414062 30.773438 36.023438 32 C 34.503906 32.722656 31.96875 35.097656 28.417969 39.136719 L 22.988281 45.296875 C 20.523438 47.171875 18.097656 48.289062 15.707031 48.648438 C 13.027344 49.007812 10.820312 48.289062 9.082031 46.488281 C 6.546875 43.820312 4.878906 40.394531 4.082031 36.214844 C 3.285156 32.179688 3.539062 28.648438 4.84375 25.621094 C 5.929688 23.171875 7.414062 21.117188 9.296875 19.460938 C 9.007812 22.199219 9.695312 24.289062 11.363281 25.730469 C 13.679688 27.746094 16.398438 28.648438 19.511719 28.433594 C 22.625 28.144531 25.339844 26.8125 27.660156 24.433594 C 34.613281 17.226562 39.285156 13.40625 41.675781 12.972656 C 43.773438 12.539062 46.636719 13.007812 50.257812 14.378906 L 56.558594 14.164062 C 57.5 13.371094 58.875 11.675781 60.6875 9.082031 C 64.742188 3.386719 67.601562 0.46875 69.269531 0.324219 C 71.585938 0.109375 74.339844 1.261719 77.527344 3.785156 L 80.351562 6.164062 C 81.507812 7.097656 82.597656 7.785156 83.609375 8.214844 C 87.59375 9.730469 90.746094 10.703125 93.0625 11.136719 \"/>\r\n                <path d=\"M 103.601562 96.109375 C 103.601562 95.242188 103.09375 94.164062 102.078125 92.863281 L 99.472656 90.703125 C 98.746094 90.34375 98.167969 90.523438 97.734375 91.242188 C 97.300781 91.964844 97.445312 92.539062 98.167969 92.972656 L 99.582031 94.269531 C 100.523438 95.207031 101.027344 96 101.101562 96.648438 C 101.171875 97.511719 101.644531 97.910156 102.515625 97.835938 C 103.308594 97.835938 103.671875 97.261719 103.601562 96.109375 M 99.253906 82.378906 C 98.601562 82.089844 98.09375 82.304688 97.734375 83.027344 C 97.300781 83.746094 97.550781 84.433594 98.492188 85.082031 L 102.621094 88 L 106.097656 91.785156 C 107.257812 93.226562 107.945312 93.585938 108.164062 92.863281 C 108.234375 92.289062 107.875 91.277344 107.078125 89.835938 L 104.46875 86.164062 C 102.875 84.359375 101.136719 83.097656 99.253906 82.378906 M 39.285156 124.214844 C 41.746094 122.917969 43.703125 122.164062 45.152344 121.945312 L 44.390625 125.1875 C 43.519531 127.785156 43.265625 129.800781 43.628906 131.242188 C 44.207031 133.980469 44.136719 136.902344 43.414062 140 C 42.46875 144.035156 40.625 146.378906 37.871094 147.027344 C 34.828125 147.675781 32.113281 147.136719 29.722656 145.40625 C 27.550781 143.820312 26.066406 141.695312 25.269531 139.027344 C 24.617188 136.648438 24.835938 133.800781 25.921875 130.488281 C 26.933594 127.386719 28.167969 125.40625 29.613281 124.539062 L 31.789062 123.675781 L 31.679688 125.082031 L 29.070312 130.59375 C 27.914062 134.054688 28.203125 136.648438 29.941406 138.378906 C 30.519531 138.953125 30.953125 138.089844 31.246094 135.785156 C 31.605469 132.613281 32.257812 130.378906 33.199219 129.082031 C 34.359375 127.421875 36.386719 125.800781 39.285156 124.214844 M 39.71875 81.40625 C 41.964844 78.738281 43.957031 75.820312 45.695312 72.648438 C 46.417969 71.566406 46.417969 70.882812 45.695312 70.59375 C 44.96875 70.304688 44.28125 70.703125 43.628906 71.785156 L 38.089844 78.488281 L 32.332031 83.566406 L 28.417969 86.703125 C 27.40625 87.421875 27.117188 88.394531 27.550781 89.621094 L 30.375 96.863281 C 31.246094 98.523438 32.691406 99.0625 34.722656 98.488281 L 35.914062 97.945312 L 35.914062 96.648438 L 33.527344 91.242188 L 33.308594 89.511719 C 33.453125 88.863281 33.707031 88.359375 34.070312 88 L 39.71875 81.40625 M 29.832031 71.890625 C 29.179688 70.089844 28.601562 69.296875 28.09375 69.511719 C 25.703125 70.164062 23.203125 71.496094 20.597656 73.511719 L 16.25 77.40625 C 15.746094 78.054688 16.035156 78.558594 17.121094 78.917969 L 19.621094 79.136719 L 29.507812 75.136719 C 30.375 74.773438 30.484375 73.695312 29.832031 71.890625 M 69.488281 81.296875 L 72.527344 82.917969 C 73.542969 83.496094 74.265625 83.675781 74.703125 83.460938 C 75.351562 83.171875 74.847656 81.910156 73.179688 79.675781 L 68.398438 74.917969 C 64.632812 72.46875 62.28125 71.710938 61.339844 72.648438 C 60.832031 73.152344 60.433594 74.019531 60.144531 75.242188 C 59.851562 76.324219 59.78125 77.1875 59.925781 77.835938 C 60.144531 78.558594 61.519531 79.242188 64.054688 79.890625 L 69.488281 81.296875 M 73.179688 57.730469 C 72.238281 55.710938 70.5 54.164062 67.964844 53.082031 C 65.140625 51.855469 63.511719 52.503906 63.078125 55.027344 C 62.785156 56.972656 63.582031 58.164062 65.464844 58.59375 C 68.074219 59.316406 69.558594 59.855469 69.921875 60.214844 L 73.289062 64.863281 C 74.664062 66.8125 75.570312 67.675781 76.003906 67.460938 C 76.945312 66.953125 76.003906 63.710938 73.179688 57.730469 M 39.285156 52.433594 L 33.089844 52.757812 C 30.628906 53.910156 28.273438 55.820312 26.03125 58.488281 C 23.855469 61.082031 23.203125 62.523438 24.074219 62.8125 C 24.4375 62.953125 25.414062 62.269531 27.007812 60.757812 L 31.027344 57.621094 L 36.785156 56.863281 C 39.246094 56.578125 40.625 56.070312 40.914062 55.351562 C 41.421875 54.199219 40.878906 53.226562 39.285156 52.433594 M 2.78125 55.351562 C 2.417969 52.394531 2.742188 50.089844 3.757812 48.433594 C 4.699219 46.703125 5.894531 46.558594 7.34375 48 C 8.863281 49.511719 10.53125 50.558594 12.339844 51.136719 L 5.605469 62.8125 C 3.867188 59.566406 2.925781 57.082031 2.78125 55.351562 M 90.128906 43.136719 L 99.6875 41.621094 C 103.671875 41.261719 106.425781 43.351562 107.945312 47.890625 C 109.46875 52.648438 107.148438 56.578125 100.992188 59.675781 C 100.703125 59.675781 100.378906 59.964844 100.015625 60.539062 C 99.507812 61.261719 99.726562 61.910156 100.667969 62.488281 C 105.085938 65.371094 108.417969 67.964844 110.660156 70.269531 C 116.09375 75.964844 118.59375 82.164062 118.160156 88.863281 C 116.203125 83.53125 113.558594 78.703125 110.226562 74.378906 C 106.171875 69.621094 103.382812 66.953125 101.863281 66.378906 C 100.921875 65.945312 100.230469 66.054688 99.796875 66.703125 C 99.363281 67.277344 99.507812 67.820312 100.230469 68.324219 L 102.839844 70.703125 L 108.273438 76.109375 C 111.457031 79.421875 114.535156 84.46875 117.507812 91.242188 L 116.746094 93.296875 C 114.210938 87.675781 111.496094 83.351562 108.597656 80.324219 C 105.84375 77.441406 103.527344 75.605469 101.644531 74.8125 C 100.777344 74.449219 100.269531 74.738281 100.125 75.675781 C 99.980469 76.539062 100.449219 77.332031 101.535156 78.054688 L 106.640625 82.269531 C 108.886719 84.648438 111.929688 89.046875 115.769531 95.460938 L 115.441406 96.324219 L 113.59375 96.757812 C 112.507812 97.261719 112.363281 98.125 113.160156 99.351562 C 118.375 103.675781 119.390625 108.792969 116.203125 114.703125 C 112.945312 120.613281 108.054688 123.027344 101.535156 121.945312 C 94.582031 133.1875 86.21875 141.695312 76.441406 147.460938 C 73.757812 148.902344 73.941406 149.585938 76.984375 149.511719 C 80.023438 149.371094 83.429688 148.144531 87.195312 145.835938 C 86.109375 152.46875 80.675781 157.835938 70.898438 161.945312 C 61.410156 165.980469 54.421875 166.34375 49.929688 163.027344 L 57.101562 162.054688 C 60.796875 161.1875 62.535156 160.433594 62.316406 159.785156 L 55.472656 160 C 49.386719 159.855469 42.542969 157.910156 34.9375 154.164062 L 30.375 151.566406 L 30.59375 151.566406 L 37.980469 151.027344 C 40.226562 150.304688 42 149.117188 43.304688 147.460938 C 46.128906 144.070312 47.46875 140.613281 47.324219 137.082031 L 46.5625 130.378906 C 46.34375 128.214844 46.890625 126.234375 48.191406 124.433594 C 51.742188 119.675781 53.769531 116.324219 54.277344 114.378906 C 54.421875 113.875 55.542969 113.1875 57.644531 112.324219 L 60.796875 111.242188 L 62.535156 112.972656 C 63.765625 114.054688 64.632812 114.378906 65.140625 113.945312 C 65.792969 113.371094 66.011719 112.46875 65.792969 111.242188 C 65.574219 109.875 64.777344 108.539062 63.402344 107.242188 C 60.433594 104.433594 58.296875 103.605469 56.992188 104.757812 C 56.484375 105.1875 56.449219 105.945312 56.882812 107.027344 L 57.644531 108.539062 C 55.253906 110.414062 53.480469 111.242188 52.320312 111.027344 L 47.757812 110.164062 C 45.078125 109.585938 42.867188 108.863281 41.128906 108 C 38.597656 106.703125 35.878906 105.765625 32.984375 105.1875 C 29.433594 104.394531 26.464844 104.359375 24.074219 105.082031 L 17.339844 107.242188 L 14.1875 108.648438 C 14.042969 108.9375 14.585938 109.332031 15.816406 109.835938 L 18.96875 111.242188 C 21.359375 112.972656 23.566406 116.578125 25.59375 122.054688 L 23.097656 127.675781 C 21.503906 131.710938 20.851562 134.628906 21.140625 136.433594 C 21.429688 138.164062 21.972656 140.109375 22.769531 142.269531 C 23.710938 144.792969 24.796875 146.882812 26.03125 148.539062 C 22.554688 145.875 19.402344 142.847656 16.578125 139.460938 C 9.988281 131.316406 5.570312 121.765625 3.324219 110.8125 C 1.148438 99.929688 1.367188 89.261719 3.976562 78.8125 C 6.148438 69.875 10.3125 60.757812 16.46875 51.460938 C 19.367188 51.097656 22.261719 49.800781 25.160156 47.566406 L 30.917969 41.082031 C 34.394531 37.046875 36.710938 34.738281 37.871094 34.164062 C 39.246094 33.511719 41.167969 33.730469 43.628906 34.8125 L 47.324219 36.757812 C 49.421875 37.765625 51.667969 38.054688 54.058594 37.621094 C 55.796875 37.332031 58.042969 36.503906 60.796875 35.136719 L 70.03125 34.8125 C 73.578125 36.035156 76.730469 38.378906 79.480469 41.835938 C 80.710938 43.421875 82.414062 44.253906 84.585938 44.324219 C 86.035156 44.324219 87.882812 43.929688 90.128906 43.136719 M 104.359375 19.351562 C 108.054688 24.613281 110.082031 27.316406 110.445312 27.460938 C 113.195312 28.757812 116.023438 31.675781 118.917969 36.214844 C 121.019531 39.53125 122.757812 42.992188 124.132812 46.59375 C 126.667969 53.007812 126.851562 61.332031 124.675781 71.566406 C 123.519531 76.613281 122.140625 81.046875 120.546875 84.863281 C 119.535156 78.738281 116.964844 73.441406 112.835938 68.972656 L 104.578125 61.730469 C 106.96875 60.144531 109.03125 58.378906 110.769531 56.433594 C 113.089844 53.765625 114.136719 51.421875 113.921875 49.40625 C 113.632812 46.164062 112.582031 43.496094 110.769531 41.40625 C 108.308594 38.378906 104.722656 37.082031 100.015625 37.511719 L 91.867188 40.109375 C 88.390625 41.40625 86.109375 41.910156 85.023438 41.621094 L 77.199219 32.972656 C 72.78125 28 69.195312 26.054688 66.445312 27.136719 L 58.949219 31.242188 L 53.515625 34.164062 L 49.605469 34.488281 L 46.671875 32.863281 L 42 30.703125 C 40.40625 30.34375 38.414062 30.773438 36.023438 32 C 34.503906 32.722656 31.96875 35.097656 28.417969 39.136719 L 22.988281 45.296875 C 20.523438 47.171875 18.097656 48.289062 15.707031 48.648438 C 13.027344 49.007812 10.820312 48.289062 9.082031 46.488281 C 6.546875 43.820312 4.878906 40.394531 4.082031 36.214844 C 3.285156 32.179688 3.539062 28.648438 4.84375 25.621094 C 5.929688 23.171875 7.414062 21.117188 9.296875 19.460938 C 9.007812 22.269531 9.660156 24.359375 11.253906 25.730469 C 13.644531 27.746094 16.398438 28.648438 19.511719 28.433594 C 22.625 28.144531 25.339844 26.8125 27.660156 24.433594 C 34.324219 17.296875 38.992188 13.476562 41.675781 12.972656 C 43.773438 12.539062 46.636719 13.007812 50.257812 14.378906 L 56.558594 14.164062 L 60.578125 9.082031 L 64.921875 3.566406 C 66.660156 1.476562 68.109375 0.394531 69.269531 0.324219 C 71.441406 0.109375 74.195312 1.261719 77.527344 3.785156 L 80.351562 6.164062 C 81.507812 7.097656 82.597656 7.785156 83.609375 8.214844 C 87.59375 9.730469 90.746094 10.703125 93.0625 11.136719 C 97.261719 11.855469 101.027344 14.59375 104.359375 19.351562 \"/>\r\n            </g>\r\n        </svg>\r\n)}\r\n\r\nexport default PipSvg;","/* import './status.css' */\r\nimport Pokeball from \"../Pokeball\";\r\nimport PipSvg from \"../PipSvg\";\r\n\r\nfunction ProjectList({setLabel}) {\r\n\r\n  const goToProject = e => {\r\n    const eventId = e.currentTarget.getAttribute('id')\r\n    switch(eventId) {\r\n      case 'movie':\r\n        setLabel('MOVIE HUB')\r\n        break;\r\n      case 'book':\r\n        setLabel('BOOKFAST CLUB')\r\n        break;\r\n      case 'pipboy':\r\n        setLabel('PIP FOR PI')\r\n        break;\r\n      case 'pokemon':\r\n        setLabel('POKEFINDERTCG')\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n    return (\r\n        <div className='project-grid'>\r\n            <div onClick={goToProject} className='project-container' id='movie'>\r\n              <div className='flex'>\r\n                <i className=\"fas fa-film\"></i>\r\n              </div>\r\n              <div className='project-title'>Movie Hub</div>\r\n            </div>\r\n\r\n            <div onClick={goToProject} className='project-container' id='book'>\r\n              <div className='project-svg'>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 16 16\">\r\n                  <path d=\"M1 2.828c.885-.37 2.154-.769 3.388-.893 1.33-.134 2.458.063 3.112.752v9.746c-.935-.53-2.12-.603-3.213-.493-1.18.12-2.37.461-3.287.811V2.828zm7.5-.141c.654-.689 1.782-.886 3.112-.752 1.234.124 2.503.523 3.388.893v9.923c-.918-.35-2.107-.692-3.287-.81-1.094-.111-2.278-.039-3.213.492V2.687zM8 1.783C7.015.936 5.587.81 4.287.94c-1.514.153-3.042.672-3.994 1.105A.5.5 0 0 0 0 2.5v11a.5.5 0 0 0 .707.455c.882-.4 2.303-.881 3.68-1.02 1.409-.142 2.59.087 3.223.877a.5.5 0 0 0 .78 0c.633-.79 1.814-1.019 3.222-.877 1.378.139 2.8.62 3.681 1.02A.5.5 0 0 0 16 13.5v-11a.5.5 0 0 0-.293-.455c-.952-.433-2.48-.952-3.994-1.105C10.413.809 8.985.936 8 1.783z\"/>   \r\n                </svg>\r\n              </div>\r\n              <div className='project-title'>The Bookfast Club</div>\r\n            </div>\r\n\r\n            <div onClick={goToProject} className='project-container' id='pipboy'>\r\n              <div className='project-svg'>\r\n                <PipSvg></PipSvg>\r\n              </div>\r\n              <div className='project-title'>Pip for pi</div>\r\n            </div>\r\n\r\n            <div onClick={goToProject} className='project-container' id='pokemon'>\r\n              <Pokeball></Pokeball>\r\n              \r\n              <div className='project-title'>PokefinderTCG</div>\r\n            </div>\r\n        </div>\r\n)}\r\n\r\nexport default ProjectList;","import './project-display.css'\r\n/* import pipForPi from '../../assets/images/pipForPi.png' */\r\n\r\nfunction ProjectDisplay({setLabel, projectDetails}) {\r\n\r\n    const backToProjectList = () => {\r\n        setLabel('PROJECTS')\r\n    }\r\n\r\n    return (\r\n        <div className='project-grid project-display'>\r\n            <div>\r\n                <button onClick={backToProjectList}>\r\n                    <i className=\"fas fa-arrow-left\"></i>\r\n                </button>\r\n                <p>\r\n                    {projectDetails.description}\r\n                </p>\r\n            </div>\r\n\r\n            <div>\r\n                <a href={projectDetails.siteLink} rel=\"noreferrer\" target=\"_blank\">\r\n                    <img src={require(`../../assets/images/${projectDetails.title}.png`).default} alt={`example of ${projectDetails.title} site`}></img>\r\n                </a>\r\n                \r\n                <div className='project-links'>\r\n                    <a className='site' rel=\"noreferrer\" href={projectDetails.siteLink} target=\"_blank\">\r\n                        <i className=\"fas fa-globe\"></i>\r\n                    </a>\r\n                    \r\n                    <a className='git' rel=\"noreferrer\" href={projectDetails.githubLink} target=\"_blank\">\r\n                        <i className=\"fab fa-github\"></i>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n)}\r\n\r\nexport default ProjectDisplay;","/* import './status.css' */\r\nimport {useState} from 'react'\r\nimport ProjectList from '../components/ProjectList';\r\nimport ProjectDisplay from '../components/ProjectDisplay';\r\n\r\nfunction Projects() {\r\n  const [label, setLabel] = useState('PROJECTS')\r\n\r\n  const projectDetails = [\r\n    {\r\n      title: 'moviehub',\r\n      description: 'A collaborative project that lets a user create a list of movies they would like to watch, using the omdb api, jquery, and local storage. The site also has multiple ways to show the user trending movies and topics that they can then put on their list. After viewing they can then check the movie off their list and organize and rank it with other movies they have seen.',\r\n      githubLink: 'https://github.com/clintonstrange/movie-hub',\r\n      siteLink: 'https://clintonstrange.github.io/movie-hub/'\r\n    },\r\n    {\r\n      title: 'bookfast-club',\r\n      description: '',\r\n      githubLink: 'https://github.com/BeatyPete/the-bookfast-club',\r\n      siteLink: 'https://the-bookfast-club.herokuapp.com/'\r\n    },\r\n    {\r\n      title: 'pipForPi',\r\n      description: 'A recreation of the pip-boy from Fallout 4 in React. The goal of this is to create a front end that simulates the same functions as the in-game pip-boy, both through normal browser event like mouse clicks, as well as accepting input from a raspberry pi‚Äôs gpio pins. Ideally any person could clone the code and have a competent UI to go with their own pip-boy prop.',\r\n      githubLink: 'https://github.com/BeatyPete/pip-pip',\r\n      siteLink: 'https://www.youtube.com/watch?v=1g_UHV42jOA&ab_channel=Raz'\r\n    },\r\n    {\r\n      title: 'pokefinderTCG',\r\n      description: '',\r\n      githubLink: 'https://github.com/Spody10/PokefinderTCG',\r\n      siteLink: 'https://pokefinder-tcg.herokuapp.com/'\r\n    }\r\n  ]\r\n\r\n    return (\r\n        <section className='projects'>\r\n\r\n        <div className='title-container'>\r\n          <div className='section-title'>{label}</div>\r\n        </div>\r\n\r\n        {label === 'PROJECTS' && (<ProjectList setLabel={setLabel}></ProjectList>)}\r\n        {label === 'MOVIE HUB' && (<ProjectDisplay setLabel={setLabel} projectDetails={projectDetails[0]}></ProjectDisplay>)}\r\n        {label === 'BOOKFAST CLUB' && (<ProjectDisplay setLabel={setLabel} projectDetails={projectDetails[1]}></ProjectDisplay>)}\r\n        {label === 'PIP FOR PI' && (<ProjectDisplay setLabel={setLabel} projectDetails={projectDetails[2]}></ProjectDisplay>)}\r\n        {label === 'POKEFINDERTCG' && (<ProjectDisplay setLabel={setLabel} projectDetails={projectDetails[3]}></ProjectDisplay>)}\r\n\r\n      </section>\r\n)}\r\n\r\nexport default Projects;","import './App.css';\n\nimport Projects from \"./pages/Projects\";\n\nfunction App() {\n  return (\n    <>\n      <header>\n        \n          <h1>\n            <i className=\"fas fa-home\"></i>\n          </h1>\n          <nav>\n            <a on>My Story</a>\n            <a>My Projects</a>\n            <a>My Resume</a>\n            <button id='contact-btn'>Contact Me</button>\n          </nav>\n        \n      </header>\n\n      <section className='splash'>\n        <div>\n          <h2>Welcome To</h2>\n          <h2>Christian's</h2>\n          <h2>Portfolio</h2>\n        </div>\n      </section>\n\n      <Projects></Projects>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}